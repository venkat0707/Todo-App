{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/venky/Music/main/screens/ForgotPasswordScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Yup from 'yup';\nimport Colors from \"../utils/colors\";\nimport SafeView from \"../components/SafeView\";\nimport Form from \"../components/Forms/Form\";\nimport FormField from \"../components/Forms/FormField\";\nimport FormButton from \"../components/Forms/FormButton\";\nimport IconButton from \"../components/IconButton\";\nimport { passwordReset } from \"../components/Firebase/firebase\";\nimport FormErrorMessage from \"../components/Forms/FormErrorMessage\";\nimport useStatusBar from \"../hooks/useStatusBar\";\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().label('Email').email('Enter a valid email').required('Please enter a registered email')\n});\nexport default function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n  useStatusBar('light-content');\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      customError = _useState2[0],\n      setCustomError = _useState2[1];\n\n  function handlePasswordReset(values) {\n    var email;\n    return _regeneratorRuntime.async(function handlePasswordReset$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = values.email;\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(passwordReset(email));\n\n          case 4:\n            navigation.navigate('Welcome');\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            setCustomError(_context.t0.message);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 7]], Promise);\n  }\n\n  return React.createElement(SafeView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Form, {\n    initialValues: {\n      email: ''\n    },\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values) {\n      return handlePasswordReset(values);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(FormField, {\n    name: \"email\",\n    leftIcon: \"email\",\n    placeholder: \"Enter email\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(FormButton, {\n    title: \"Forgot Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(FormErrorMessage, {\n    error: customError,\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  })), React.createElement(IconButton, {\n    style: styles.backButton,\n    iconName: \"keyboard-backspace\",\n    color: Colors.white,\n    size: 30,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    padding: 15,\n    backgroundColor: Colors.mediumGrey\n  },\n  backButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 10\n  }\n});","map":{"version":3,"sources":["/home/venky/Music/main/screens/ForgotPasswordScreen.js"],"names":["React","useState","Yup","Colors","SafeView","Form","FormField","FormButton","IconButton","passwordReset","FormErrorMessage","useStatusBar","validationSchema","object","shape","email","string","label","required","ForgotPasswordScreen","navigation","customError","setCustomError","handlePasswordReset","values","navigate","message","styles","container","backButton","white","goBack","StyleSheet","create","padding","backgroundColor","mediumGrey","justifyContent","alignItems","marginVertical"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport * as Yup from 'yup';\n\nimport Colors from '../utils/colors';\nimport SafeView from '../components/SafeView';\nimport Form from '../components/Forms/Form';\nimport FormField from '../components/Forms/FormField';\nimport FormButton from '../components/Forms/FormButton';\nimport IconButton from '../components/IconButton';\nimport { passwordReset } from '../components/Firebase/firebase';\nimport FormErrorMessage from '../components/Forms/FormErrorMessage';\nimport useStatusBar from '../hooks/useStatusBar';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .label('Email')\n    .email('Enter a valid email')\n    .required('Please enter a registered email')\n});\n\nexport default function ForgotPasswordScreen({ navigation }) {\n  useStatusBar('light-content');\n\n  const [customError, setCustomError] = useState('');\n\n  async function handlePasswordReset(values) {\n    const { email } = values;\n\n    try {\n      await passwordReset(email);\n      navigation.navigate('Welcome');\n    } catch (error) {\n      setCustomError(error.message);\n    }\n  }\n\n  return (\n    <SafeView style={styles.container}>\n      <Form\n        initialValues={{ email: '' }}\n        validationSchema={validationSchema}\n        onSubmit={values => handlePasswordReset(values)}\n      >\n        <FormField\n          name=\"email\"\n          leftIcon=\"email\"\n          placeholder=\"Enter email\"\n          autoCapitalize=\"none\"\n          keyboardType=\"email-address\"\n          textContentType=\"emailAddress\"\n          autoFocus={true}\n        />\n        <FormButton title=\"Forgot Password\" />\n        {<FormErrorMessage error={customError} visible={true} />}\n      </Form>\n      <IconButton\n        style={styles.backButton}\n        iconName=\"keyboard-backspace\"\n        color={Colors.white}\n        size={30}\n        onPress={() => navigation.goBack()}\n      />\n    </SafeView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 15,\n    backgroundColor: Colors.mediumGrey\n  },\n  backButton: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}