{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/venky/Music/main/src/components/TodoItem.js\";\n\nimport React, { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { Feather } from '@expo/vector-icons';\nimport MenuBox from \"./MenuBox\";\nimport { TodoContext } from \"../context/TodoContext\";\nvar TodoItem = React.memo(function (_ref) {\n  var text = _ref.text,\n      completed = _ref.completed,\n      id = _ref.id;\n\n  var _useContext = useContext(TodoContext),\n      toggleTodo = _useContext.toggleTodo;\n\n  var container = styles.container,\n      todoText = styles.todoText,\n      icon = styles.icon,\n      completedStyle = styles.completedStyle,\n      nonCompleteStyle = styles.nonCompleteStyle,\n      completeText = styles.completeText,\n      nonCompleteText = styles.nonCompleteText;\n  var iconStyle = completed ? {\n    name: 'check-circle',\n    color: '#8eedc7'\n  } : {\n    name: 'circle',\n    color: '#9fb3c8'\n  };\n  var todoStyle = completed ? completedStyle : nonCompleteStyle;\n  var textStyle = completed ? completeText : nonCompleteText;\n  return React.createElement(View, {\n    style: [container, todoStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return toggleTodo(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Feather, {\n    name: iconStyle.name,\n    size: 28,\n    color: iconStyle.color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }))), React.createElement(Text, {\n    style: [todoText, textStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, text), React.createElement(MenuBox, {\n    todoId: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Feather, {\n    name: \"more-vertical\",\n    size: 28,\n    color: \"#9fb3c8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }))));\n});\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 6,\n    borderRadius: 5\n  },\n  todoText: {\n    flex: 1,\n    fontSize: 18,\n    paddingHorizontal: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  icon: {\n    paddingLeft: 8,\n    paddingRight: 3,\n    paddingTop: 13,\n    paddingBottom: 13\n  },\n  completedStyle: {\n    borderColor: '#65d6ad',\n    borderWidth: 1\n  },\n  nonCompleteStyle: {\n    shadowColor: '#9fb3c8',\n    shadowOffset: {\n      width: 1,\n      height: 4\n    },\n    elevation: 2\n  },\n  nonCompleteText: {\n    color: '#102a43',\n    textDecorationLine: 'none'\n  },\n  completeText: {\n    textDecorationLine: 'line-through',\n    color: '#bcccdc'\n  }\n});\nexport default TodoItem;","map":{"version":3,"sources":["/home/venky/Music/main/src/components/TodoItem.js"],"names":["React","useContext","Feather","MenuBox","TodoContext","TodoItem","memo","text","completed","id","toggleTodo","container","styles","todoText","icon","completedStyle","nonCompleteStyle","completeText","nonCompleteText","iconStyle","name","color","todoStyle","textStyle","StyleSheet","create","backgroundColor","height","flexDirection","alignItems","marginBottom","borderRadius","flex","fontSize","paddingHorizontal","justifyContent","paddingLeft","paddingRight","paddingTop","paddingBottom","borderColor","borderWidth","shadowColor","shadowOffset","width","elevation","textDecorationLine"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { StyleSheet, View, Text, TouchableWithoutFeedback } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\n\nimport MenuBox from './MenuBox';\n\nimport { TodoContext } from '../context/TodoContext';\n\nconst TodoItem = React.memo(({ text, completed, id }) => {\n  const { toggleTodo } = useContext(TodoContext);\n\n  const {\n    container,\n    todoText,\n    icon,\n    completedStyle,\n    nonCompleteStyle,\n    completeText,\n    nonCompleteText\n  } = styles;\n\n  const iconStyle = completed\n    ? { name: 'check-circle', color: '#8eedc7' }\n    : { name: 'circle', color: '#9fb3c8' };\n\n  const todoStyle = completed ? completedStyle : nonCompleteStyle;\n\n  const textStyle = completed ? completeText : nonCompleteText;\n\n  return (\n    <View style={[container, todoStyle]}>\n      <TouchableWithoutFeedback onPress={() => toggleTodo(id)}>\n        <View style={icon}>\n          <Feather name={iconStyle.name} size={28} color={iconStyle.color} />\n        </View>\n      </TouchableWithoutFeedback>\n      <Text style={[todoText, textStyle]}>{text}</Text>\n      <MenuBox todoId={id}>\n        <View style={icon}>\n          <Feather name=\"more-vertical\" size={28} color=\"#9fb3c8\" />\n        </View>\n      </MenuBox>\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    height: 60,\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 6,\n    borderRadius: 5\n  },\n  todoText: {\n    flex: 1,\n    fontSize: 18,\n    paddingHorizontal: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  icon: {\n    paddingLeft: 8,\n    paddingRight: 3,\n    paddingTop: 13,\n    paddingBottom: 13\n  },\n  completedStyle: {\n    borderColor: '#65d6ad',\n    borderWidth: 1\n  },\n  nonCompleteStyle: {\n    shadowColor: '#9fb3c8',\n    shadowOffset: {\n      width: 1,\n      height: 4\n    },\n    elevation: 2\n  },\n  nonCompleteText: {\n    color: '#102a43',\n    textDecorationLine: 'none'\n  },\n  completeText: {\n    textDecorationLine: 'line-through',\n    color: '#bcccdc'\n  }\n});\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}