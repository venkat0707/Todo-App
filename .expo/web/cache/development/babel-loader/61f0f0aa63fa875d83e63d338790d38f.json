{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/venky/Music/main/src/components/ShowModal.js\";\n\nimport React, { useContext } from 'react';\nimport Modal from 'react-native-modal';\nimport { ModalContext } from \"../context/ModalContext\";\n\nvar ShowModal = function ShowModal(_ref) {\n  var isVisible = _ref.isVisible,\n      children = _ref.children;\n\n  var _useContext = useContext(ModalContext),\n      closeModal = _useContext.closeModal;\n\n  return React.createElement(Modal, {\n    isVisible: isVisible,\n    onBackdropPress: closeModal,\n    onBackButtonPress: closeModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nvar MemoShowModal = React.memo(ShowModal, function (prev, next) {\n  return prev.isVisible === next.isVisible;\n});\nexport default MemoShowModal;","map":{"version":3,"sources":["/home/venky/Music/main/src/components/ShowModal.js"],"names":["React","useContext","Modal","ModalContext","ShowModal","isVisible","children","closeModal","MemoShowModal","memo","prev","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,YAAT;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA6B;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC7C,oBAAuBL,UAAU,CAACE,YAAD,CAAjC;AAAA,MAAQI,UAAR,eAAQA,UAAR;;AAEA,SACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEF,SADb;AAEE,IAAA,eAAe,EAAEE,UAFnB;AAGE,IAAA,iBAAiB,EAAEA,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,QALH,CADF;AASD,CAZD;;AAcA,IAAME,aAAa,GAAGR,KAAK,CAACS,IAAN,CAAWL,SAAX,EAAsB,UAACM,IAAD,EAAOC,IAAP,EAAgB;AAC1D,SAAOD,IAAI,CAACL,SAAL,KAAmBM,IAAI,CAACN,SAA/B;AACD,CAFqB,CAAtB;AAIA,eAAeG,aAAf","sourcesContent":["import React, { useContext } from 'react';\nimport Modal from 'react-native-modal';\n\nimport { ModalContext } from '../context/ModalContext';\n\nconst ShowModal = ({ isVisible, children }) => {\n  const { closeModal } = useContext(ModalContext);\n\n  return (\n    <Modal\n      isVisible={isVisible}\n      onBackdropPress={closeModal}\n      onBackButtonPress={closeModal}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nconst MemoShowModal = React.memo(ShowModal, (prev, next) => {\n  return prev.isVisible === next.isVisible;\n});\n\nexport default MemoShowModal;\n"]},"metadata":{},"sourceType":"module"}