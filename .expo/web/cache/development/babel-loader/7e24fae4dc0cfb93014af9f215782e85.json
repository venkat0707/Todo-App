{"ast":null,"code":"var _jsxFileName = \"/home/venky/Music/main/screens/HomeScreen.js\",\n    _this = this;\n\nimport useStatusBar from \"../hooks/useStatusBar\";\nimport React, { useContext, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport InputBox from \"../src/components/InputBox\";\nimport TodoList from \"../src/components/TodoList\";\nimport ShowModal from \"../src/components/ShowModal\";\nimport EditContent from \"../src/components/EditContent\";\nimport BottomTabs from \"../src/components/BottomTabs\";\nimport { TodoContext, TodoProvider } from \"../src/context/TodoContext\";\nimport { ModalProvider, ModalContext } from \"../src/context/ModalContext\";\n\nfunction HomeScreen() {\n  useStatusBar('dark-content');\n\n  var _useContext = useContext(TodoContext),\n      state = _useContext.state,\n      addTodo = _useContext.addTodo,\n      getLocalData = _useContext.getLocalData,\n      saveData = _useContext.saveData;\n\n  var _useContext2 = useContext(ModalContext),\n      isVisible = _useContext2.state;\n\n  var container = styles.container,\n      title = styles.title;\n  useEffect(function () {\n    getLocalData();\n  }, []);\n  useEffect(function () {\n    saveData(state);\n  }, [state]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"#2680c2\",\n    barStyle: \"light-content\",\n    translucent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }\n  }), React.createElement(InputBox, {\n    initialState: \"\",\n    iconName: \"edit-2\",\n    callback: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(TodoList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(BottomTabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(ShowModal, {\n    isVisible: isVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(EditContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f4f8',\n    marginTop: StatusBar.currentHeight\n  },\n  title: {\n    fontSize: 36,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    backgroundColor: '#2680c2',\n    color: '#fff',\n    paddingBottom: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#84c5f4',\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: 1,\n      height: 2\n    },\n    textShadowRadius: 10\n  }\n});\nexport default (function () {\n  return React.createElement(TodoProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(ModalProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(HomeScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["/home/venky/Music/main/screens/HomeScreen.js"],"names":["useStatusBar","React","useContext","useEffect","AsyncStorage","InputBox","TodoList","ShowModal","EditContent","BottomTabs","TodoContext","TodoProvider","ModalProvider","ModalContext","HomeScreen","state","addTodo","getLocalData","saveData","isVisible","container","styles","title","StyleSheet","create","flex","backgroundColor","marginTop","StatusBar","currentHeight","fontSize","textAlign","fontWeight","color","paddingBottom","borderBottomWidth","borderBottomColor","textShadowColor","textShadowOffset","width","height","textShadowRadius"],"mappings":"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","sourcesContent":["import useStatusBar from '../hooks/useStatusBar';\n\nimport React, { useContext, useEffect } from 'react';\nimport { View, Text, StyleSheet, StatusBar, Button } from 'react-native';\n//import AsyncStorage from '@react-native-community/async-storage';\nimport { AsyncStorage } from 'react-native';\nimport InputBox from '../src/components/InputBox';\nimport TodoList from '../src/components/TodoList';\nimport ShowModal from '../src/components/ShowModal';\nimport EditContent from '../src/components/EditContent';\nimport BottomTabs from '../src/components/BottomTabs';\n\nimport { TodoContext, TodoProvider } from '../src/context/TodoContext';\nimport { ModalProvider, ModalContext } from '../src/context/ModalContext';\n\nfunction HomeScreen() {\n  useStatusBar('dark-content');\n \n   const { state, addTodo, getLocalData, saveData } = useContext(TodoContext);\n  const { state: isVisible } = useContext(ModalContext);\n  const { container, title } = styles;\n\n  useEffect(() => {\n    getLocalData();\n  }, []);\n\n  useEffect(() => {\n    saveData(state);\n  }, [state]);\n  return (\n    <View style={styles.container}>\n    \n       <StatusBar\n        backgroundColor=\"#2680c2\"\n        barStyle=\"light-content\"\n        translucent\n      />\n      \n      <InputBox initialState=\"\" iconName=\"edit-2\" callback={addTodo} />\n      <TodoList />\n      <BottomTabs />\n      <ShowModal isVisible={isVisible}>\n        <EditContent />\n      </ShowModal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f4f8',\n    marginTop: StatusBar.currentHeight\n  },\n  title: {\n    fontSize: 36,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    backgroundColor: '#2680c2',\n    color: '#fff',\n    paddingBottom: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#84c5f4',\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: { width: 1, height: 2 },\n    textShadowRadius: 10\n  }\n});\nexport default () => {\n  return (\n    <TodoProvider>\n      <ModalProvider>\n        <HomeScreen />\n      </ModalProvider>\n    </TodoProvider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}